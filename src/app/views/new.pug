
doctype html
html
  head
    meta(charset='UTF-8')
    meta(http-equiv='x-ua-compatible' content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
    title #{title}
    link(href='//developer.ringcentral.com/assets/images/favicon.ico?v=20181214-0738', type='image/vnd.microsoft.icon', rel='shortcut icon')
    style
      include style.css
    script(src='https://unpkg.com/ringcentral-notification-integration-helper@0.4.2/dist/ringcentral-notification-integration-helper.js')
  body
    #container
      p The integration can send notifications to the RingCentral conversation and allows you to take action on errors straight from RingCentral.
      p 1. Sign into Bugsnag and go to project setting page.
      p 2. Go to <strong>Data forwarding</strong> setting:
      p
        img(src='https://apps.ringcentral.com/integration/bugsnag/bugsnag01.png')
      p 3. Click <strong>Webhook</strong>.
      p 4. In <strong>Webhook URL</strong> field, enter the following URL:
      .webhookURLArea
          input.input#webhookURL(readonly type='text' value='Loading' data-glip-webhook-uri=glipWebhookUri data-analytics-key=analyticsKey)
          button#copyBtn(title="Copy")
            img(src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' class='sc-fzpans gmdNNO'%3E%3Cpath d='M27 28H10a1 1 0 01-1-1V10a1 1 0 011-1h17a1 1 0 011 1v17a1 1 0 01-1 1zm1-21H9a2 2 0 00-2 2v19a2 2 0 002 2h19a2 2 0 002-2V9a2 2 0 00-2-2zM3 18a1 1 0 01-1-1V4a2 2 0 012-2h13a1 1 0 010 2H5a1 1 0 00-1 1v12a1 1 0 01-1 1z'%3E%3C/path%3E%3C/svg%3E")
            
      p 5. Click <strong>Save</strong>.
      p 6. Update your Webhook <strong>Notify me when</strong> setting
      p
        img(src='https://apps.ringcentral.com/integration/bugsnag/bugsnag02.png')
      p
        a(href='https://github.com/ringcentral/bugsnag-notification-app/issues/new' target="_blank" rel='noopener noreferrer') Feedback (Any suggestions, or issues about the Bugsnag notification app?
    script.
    script.
      var copyBtn = window.document.getElementById('copyBtn');
      var webhookInput = window.document.getElementById('webhookURL');
      var glipWebhookUri = webhookInput.getAttribute('data-glip-webhook-uri');
      var analyticsKey = webhookInput.getAttribute('data-analytics-key');
      if (analyticsKey) {
        !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","debug","page","once","off","on","addSourceMiddleware","addIntegrationMiddleware","setAnonymousId","addDestinationMiddleware"];analytics.factory=function(e){return function(){var t=Array.prototype.slice.call(arguments);t.unshift(e);analytics.push(t);return analytics}};for(var e=0;e<analytics.methods.length;e++){var key=analytics.methods[e];analytics[key]=analytics.factory(key)}analytics.load=function(key,e){var t=document.createElement("script");t.type="text/javascript";t.async=!0;t.src="https://cdn.segment.com/analytics.js/v1/" + key + "/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(t,n);analytics._loadOptions=e};analytics._writeKey="write key redacted";analytics.SNIPPET_VERSION="4.13.2";
          analytics.load(analyticsKey);
          analytics.page();
        }}();
      }
      function track(eventName) {
        if (!window.analytics) {
          return;
        }
        window.analytics.track(eventName, {
          appName: 'Bugsnag Notifications',
        }, {
          integrations: {
            All: true,
            Mixpanel: true
          }
        });
      }
      copyBtn.addEventListener('click', function() {
        webhookInput.select();
        webhookInput.setSelectionRange(0, 99999);
        document.execCommand("copy");
        track('Copy Webhook URL');
      });
      var rcApp = new RingCentralNotificationIntegrationHelper.RingCentralNotificationIntegrationHelper();
      rcApp.on('submit', function (e) {
        track('Click Submit');
        return {
          status: true,
        };
      });
      var webhooksUri = window.location.pathname.replace('/webhook/new', '/webhooks');
      fetch(webhooksUri, {
        method: 'POST',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          webhook: glipWebhookUri,
        }),
      }).then(function (res) {
        return res.json();
      }).then(function (data) {
        webhookInput.value = data.webhookUri;
        rcApp.send({
          canSubmit: true,
        });
        track('Generate Webhook URL Success');
      }).catch(function (e) {
        console.error(e);
        webhookInput.value = 'Generate webhook error, please reopen this window.';
        track('Generate Webhook URL Error');
      });
